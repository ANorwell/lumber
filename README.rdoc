= lumber

Lumber tries to make it easy to use the more robust log4r logging system within your rails application.
To do this it sets up log4r configuration from a yml file, and provides utility methods for adding a
:logger accessor to classes dynamically as they get created.  In the default setup shown below, calls
to logger from a model/controller/mailer, will include that classes name in the log output.

To use it, install the wr0ngway-lumber gem, run the lumber generator, then make the following edits
to config/environment.rb:

  # before Rails::Initializer.run
  #
  require 'lumber'
  Lumber.init()

  # Inside the block for Rails::Initializer.run
  #
  config.after_initialize do
    # setup log4r heirarchy - these need to happen after frameworks
    # are loaded, but before subclasses get defined
    Lumber.setup_logger_heirarchy(ActiveRecord::Base, "rails::models")
    Lumber.setup_logger_heirarchy(ActionController::Base, "rails::controllers")
    Lumber.setup_logger_heirarchy(ActionMailer::Base, "rails::mailers")
  end

If you want to change the log level for a different environment, add a line like below to the config/environments/<env>.rb

  # Set info as the default log level for production
  Log4r::Logger.root.level = Log4r::INFO


== Copyright

Copyright (c) 2009 Matt Conway. See LICENSE for details.
